"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[128],{5318:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(7378);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),u=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(a),k=n,m=d["".concat(o,".").concat(k)]||d[k]||p[k]||s;return a?r.createElement(m,i(i({ref:t},c),{},{components:a})):r.createElement(m,i({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,i=new Array(s);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var u=2;u<s;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5800:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=a(5773),n=(a(7378),a(5318));const s={slug:"/",sidebar_position:1},i="Introduction",l={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"Improve your website performance by executing JavaScript during a browser's idle periods.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/",permalink:"/",draft:!1,editUrl:"https://github.com/hiroki0525/idle-task/docs/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"API",permalink:"/category/api"}},o={},u=[{value:"Features",id:"features",level:2},{value:"Manage tasks priority",id:"manage-tasks-priority",level:3},{value:"Get result by using Promise based API",id:"get-result-by-using-promise-based-api",level:3},{value:"Cache",id:"cache",level:3},{value:"Optimize executing tasks",id:"optimize-executing-tasks",level:3},{value:"Analyze tasks execution time",id:"analyze-tasks-execution-time",level:3},{value:"Install",id:"install",level:2},{value:"Quick Start",id:"quick-start",level:2}],c={toc:u};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"Improve your website performance by executing JavaScript during a browser's idle periods."),(0,n.kt)("h2",{id:"features"},"Features"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"idle-task")," wraps ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback"},"requestIdleCallback")," ."),(0,n.kt)("p",null,"The features are as follows."),(0,n.kt)("h3",{id:"manage-tasks-priority"},"Manage tasks priority"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { setIdleTask } from 'idle-task';\n\nsetIdleTask(yourLowPrioryFunction, { priority: 'low' });\nsetIdleTask(yourHighPrioryFunction, { priority: 'high' });\n")),(0,n.kt)("h3",{id:"get-result-by-using-promise-based-api"},"Get result by using Promise based API"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getResultFromIdleTask } from 'idle-task';\n\nconst result = await getResultFromIdleTask(yourFunction);\n")),(0,n.kt)("h3",{id:"cache"},"Cache"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { setIdleTask, waitForIdleTask } from 'idle-task';\n\nconst taskKey = setIdleTask(yourFunction);\nconst result1 = await waitForIdleTask(taskKey);\n// from cache\nconst result2 = await waitForIdleTask(taskKey);\n")),(0,n.kt)("h3",{id:"optimize-executing-tasks"},"Optimize executing tasks"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { setIdleTask } from 'idle-task';\n\nsetIdleTask(longTask);\n// these functions will be executed during next browser's idle time.\nsetIdleTask(shortTask);\nsetIdleTask(shortTask);\n")),(0,n.kt)("h3",{id:"analyze-tasks-execution-time"},"Analyze tasks execution time"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { setIdleTask, configureIdleTask } from 'idle-task';\n\nconfigureIdleTask({ debug: true })\n// output the execution time to the web console.\nsetIdleTask(yourFunction1);\n")),(0,n.kt)("h2",{id:"install"},"Install"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm i idle-task\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add idle-task\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add idle-task\n")),(0,n.kt)("p",null,"You can also use CDN."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<script crossorigin src="https://unpkg.com/idle-task/dist/umd/index.js"><\/script>\n')),(0,n.kt)("h2",{id:"quick-start"},"Quick Start"),(0,n.kt)("p",null,"The simplest way is to use ",(0,n.kt)("inlineCode",{parentName:"p"},"setIdleTask")," ."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { setIdleTask } from 'idle-task';\n\nconst sendAnalyticsData = () =>\n        console.log(\"send analytics data during a browser's idle periods.\");\nsetIdleTask(sendAnalyticsData);\n")),(0,n.kt)("p",null,"If you want to get the result of a task, please use ",(0,n.kt)("inlineCode",{parentName:"p"},"getResultFromIdleTask")," ."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getResultFromIdleTask } from 'idle-task';\n\nconst generateRandomNumber = () => Math.floor( Math.random() * 100 );\nconst result = await getResultFromIdleTask(generateRandomNumber);\n")))}p.isMDXComponent=!0}}]);