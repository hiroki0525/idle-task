"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[976],{5318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(k,o(o({ref:t},p),{},{components:n})):r.createElement(k,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5400:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(5773),a=(n(7378),n(5318));const i={sidebar_position:8},o="configureIdleTask",l={unversionedId:"api/configureIdleTask",id:"api/configureIdleTask",title:"configureIdleTask",description:"You can configure idle-task.",source:"@site/docs/api/configureIdleTask.md",sourceDirName:"api",slug:"/api/configureIdleTask",permalink:"/api/configureIdleTask",draft:!1,editUrl:"https://github.com/hiroki0525/idle-task/docs/api/configureIdleTask.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"getIdleTaskStatus",permalink:"/api/getIdleTaskStatus"},next:{title:"Recipes",permalink:"/recipes"}},s={},u=[{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:3},{value:"interval?: number",id:"interval-number",level:4},{value:"debug?: boolean",id:"debug-boolean",level:4},{value:"timeout?: number",id:"timeout-number",level:4},{value:"timeoutStrategy?: &#39;error&#39; | \u2019forceRun&#39;",id:"timeoutstrategy-error--forcerun",level:4},{value:"Returns",id:"returns",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configureidletask"},"configureIdleTask"),(0,a.kt)("p",null,"You can configure ",(0,a.kt)("inlineCode",{parentName:"p"},"idle-task"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"configureIdleTask(options);\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { configureIdleTask } from 'idle-task';\n\nconfigureIdleTask({\n    interval: 1000, // ms\n    debug: process.env.NODE_ENV === 'development',\n    timeout: 3000,\n});\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"configureIdleTask")," configures ",(0,a.kt)("inlineCode",{parentName:"p"},"idle-task")," ."),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options"),": The options as follows.")),(0,a.kt)("h4",{id:"interval-number"},"interval?: number"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"idle-task")," checks tasks which was registered by ",(0,a.kt)("inlineCode",{parentName:"p"},"setIdleTask")," during a browser's idle periods, so ",(0,a.kt)("strong",{parentName:"p"},"they will not always be executed")," ."),(0,a.kt)("p",null,"Please set ",(0,a.kt)("inlineCode",{parentName:"p"},"interval")," if you want to guarantee to run tasks as much as possible."),(0,a.kt)("p",null,"Even if the browser is not idle, ",(0,a.kt)("inlineCode",{parentName:"p"},"idle-task")," checks tasks every 1000 ms when ",(0,a.kt)("inlineCode",{parentName:"p"},"interval")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"1000")," and ",(0,a.kt)("strong",{parentName:"p"},"will execute tasks without negative impact on performance"),"."),(0,a.kt)("h4",{id:"debug-boolean"},"debug?: boolean"),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"debug")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", you can know how long did it take to finish the task via the web console."),(0,a.kt)("p",null,"I recommend less than ",(0,a.kt)("strong",{parentName:"p"},"50 ms")," to execute a task because of ",(0,a.kt)("a",{parentName:"p",href:"https://web.dev/i18n/en/rail/"},"RAIL model")," ."),(0,a.kt)("p",null,"The default is ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," ."),(0,a.kt)("h4",{id:"timeout-number"},"timeout?: number"),(0,a.kt)("p",null,"This option configures ",(0,a.kt)("inlineCode",{parentName:"p"},"timeout")," of ",(0,a.kt)("inlineCode",{parentName:"p"},"waitForIdleTask")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"getResultFromIdleTask")," as ",(0,a.kt)("strong",{parentName:"p"},"default")," setting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"configureIdleTask({ timeout: 3000 });\n\nconst taskKey = setIdleTask(yourFunction);\n// timeout is 3000\nconst result = await waitForIdleTask(taskKey);\n\n// timeout is 5000 if you set timeout as option\nconst result = await waitForIdleTask(taskKey, { timeout: 5000 });\n")),(0,a.kt)("h4",{id:"timeoutstrategy-error--forcerun"},"timeoutStrategy?: 'error' | \u2019forceRun'"),(0,a.kt)("p",null,"This option configures ",(0,a.kt)("inlineCode",{parentName:"p"},"timeoutStrategy")," of ",(0,a.kt)("inlineCode",{parentName:"p"},"waitForIdleTask")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"getResultFromIdleTask")," as ",(0,a.kt)("strong",{parentName:"p"},"default")," setting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"configureIdleTask({ timeout: 3000, timeoutStrategy: 'forceRun' });\n\nconst taskKey = setIdleTask(yourFunction);\n// run task in 3000 ms regardless of whether the task has already been executed or not.\nconst result = await waitForIdleTask(taskKey);\n\n// timeoutStrategy is 'error' if you set timeoutStrategy as option\ntry {\n  const result = await waitForIdleTask(taskKey, { timeoutStrategy: 'error' });  \n} catch {\n  console.error('timeout!')\n}\n")),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("p",null,"No return value."))}c.isMDXComponent=!0}}]);